%% Set Filter to Ban Experiments from Classification Stage
% Due to undesired very low activity or atifacts
% According to Raster Activity Features and General Ensemble Features
% and The Condition

% Input:
%   Features Thresholds
% Output:
%   List of Experiments IDs to ban
%% Setup Criteria Thresholds *******************************************
% Discriminate the Following Features
% For Initial Condition Usually
% Thresholds are MINIMAL values ACCEPTDE
ConditionNameCheck='Dyskinesia';
% Raster Activity Minimal Constraint:
DF.RateNeurons_Threshold=0;
DF.EffectiveActivity_Threshold=0.25;
% Ensembles General Minimal Constraint:
DF.RateTrans_Threshold=0;
DF.RateCycles_Threshold=0;
DF.SynWeigthMean_Threshold=0;
DF.SynWeigthVar_Threshold=0;
%% Load Datasetes ******************************************************
% Raster Activity Minimal Constraint:
Dirpwd=pwd;
slashesindx=find(Dirpwd=='\');
CurrentPathOK=[Dirpwd(1:slashesindx(end))]; % Finder Spiker Root Folder

% Load File 
[FileName,PathName] = uigetfile('*.csv','Raster Activity Dataset',...
    'MultiSelect', 'off',CurrentPathOK);
CurrentPathOK=PathName;
Xraster=readtable([PathName,FileName]);
Yraster=categorical(table2array( Xraster(:,1)) );   % Labels
EXPIDraster=table2array( Xraster(:,2));             % EXPIDs Cell of Strings
FeaturesRaster=Xraster.Properties.VariableNames;    % Feature Names
% FeatRaster=table2cell(    Xraster(1,:));                             
% Xraster=table2array( Xraster(:,3:end) );            % DataSet

% Ensembles General Minimal Constraint:
% Load File 
[FileName,PathName] = uigetfile('*.csv','General Ensembles Dataset',...
    'MultiSelect', 'off',CurrentPathOK);

Xensemble=readtable([PathName,FileName]);
% Labels
Yensemble=categorical(table2array( Xensemble(:,1)) );   % Categorical ARRAYS
EXPIDensemble=table2array( Xensemble(:,2));             % EXPIDs Cell of Strings
FeaturesEnsemble=Xensemble.Properties.VariableNames;    % Feature Names
% FeatEnsembles=Xensemble(1,:)                            % Feature Names
% Xensemble=table2array( Xensemble(:,3:end) );            % Dataset
%% Filter Experiment IDs *************************************************
% Discriminant Feature Loop
DFNames=fieldnames(DF);
RejectedExperiments={};
aux=1;
for n=1:numel(DFNames)
    ActualFeature=DFNames{n};
    Actual_Threshold=getfield(DF,ActualFeature);
    auxchar=find(ActualFeature=='_');
    fprintf('>>Checking Feature: %s \n',ActualFeature(1:auxchar-1));
    % Check kind of Feature
    if ismember(ActualFeature(1:auxchar-1),FeaturesRaster)
        fprintf('>Raster Feature: %s.\n',ActualFeature(1:auxchar-1))
        FeatureVector=getfield(Xraster,ActualFeature(1:auxchar-1));
        Y=Yraster;
        EXPID=EXPIDraster;
    elseif ismember(ActualFeature(1:auxchar-1),FeaturesEnsemble)
        fprintf('>Ensemble Feature: %s.\n',ActualFeature(1:auxchar-1))
        FeatureVector=getfield(Xensemble,ActualFeature(1:auxchar-1));
        Y=Yensemble;
        EXPID=EXPIDensemble;
    else
        disp('Feature Not Found.')
    end
    % Identify Experiments
    EXPindx=find(Y==categorical(cellstr(ConditionNameCheck) ));
    % Rejec Experiments of the Conditions:
    % Thresholds are MINIMAL values ACCEPTDE
    RejectIndexofEXPID=find(FeatureVector(EXPindx)<=Actual_Threshold);
    RejectedEXpIndx=EXPindx(RejectIndexofEXPID);
    if isempty(RejectedEXpIndx)
    else
        RejectedExperiments=[RejectedExperiments;EXPID(RejectedEXpIndx)];
    end
end
RejectedExperiments=unique(RejectedExperiments);
%% Output ****************************************************************
